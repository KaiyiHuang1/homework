class Solution {
    public int[] sortTransformedArray(int[] nums, int a, int b, int c) {
        //basically comparing the distance of nums[i] to vertex
        double vertex = - b / 2.0 / a;
        //binary search the pointe closest to the vertex
        int left = 0 , right = nums.length - 1;
        while(left <= right){
            int mid = left + (right - left)/2;
            if(nums[mid] <= vertex){
                left = mid + 1;
            }else{
                right = mid - 1;
            }
        }
        int[] res = new int[nums.length];
        int index = 0;
        while(left < nums.length || right >=0){
            if(right < 0 || (left < nums.length && (vertex - nums[right] > nums[left] - vertex))){

                res[index++] = a * nums[left] *nums[left] + b * nums[left] + c;
                left++;
            }else {
                res[index++] = a * nums[right] *nums[right] + b * nums[right] + c;
                right--;
            }
        }
        if(a < 0 ) reverse(res);
        return res;
    }
    public void reverse(int[] nums){
        int left = 0, right  = nums.length - 1;
        while(left < right){
            int hold = nums[left];
            nums[left] = nums[right];
            nums[right] =  hold;
            left++; right--;
        }
    }
}