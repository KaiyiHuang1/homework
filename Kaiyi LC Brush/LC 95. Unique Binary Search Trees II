/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public List<TreeNode> generateTrees(int n) {
        return generator(1, n);

    }

    public List<TreeNode> generator(int start, int end){
        List<TreeNode> res = new ArrayList<>();
        //base case
        if(start > end){
            res.add(null);//have to add null here to line up the leftres and rightres
            return res;
        }

        //iterate the number in the range to be the root
        for(int i = start; i <= end; i++){
            List<TreeNode> leftRes = generator(start, i - 1);
            List<TreeNode> rightRes = generator(i  + 1, end);
            for(TreeNode left: leftRes){
                for(TreeNode right: rightRes){
                    TreeNode root = new TreeNode(i);
                    root.left = left;
                    root.right = right;
                    res.add(root);
                }
            }
        }
        return res;
    }
}