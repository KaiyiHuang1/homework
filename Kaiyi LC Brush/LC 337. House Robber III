/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public int rob(TreeNode root) {
        int[] res = helper(root);
        return Math.max(res[0], res[1]);
    }

    public int[] helper(TreeNode root){//int[]{rob, not_rob}
        if(root == null) return new int[]{0,0};
        int left[] = helper(root.left);
        int right[] = helper(root.right);

        int rob = root.val + left[1] + right[1];//if not rob this node, its kid you are free to rob
        int not_rob = Math.max(left[0],left[1]) + Math.max(right[0], right[1]);
        return new int[]{rob, not_rob};
    }
}